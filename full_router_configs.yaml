apiVersion: v1
kind: Namespace
metadata:
  name: nginx-router

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: nginx-router
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: nginx
  name: nginx
  namespace: nginx-router
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
        - image: nginx
          imagePullPolicy: IfNotPresent
          name: nginx
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-default-conf
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
        - name: nginx-default-conf
          secret:
            defaultMode: 420
            secretName: nginx-default-conf

---

apiVersion: v1
data:
  default.conf: c2VydmVyIHsKCWxpc3RlbiAgICAgICA4MDsKICAgIHNlcnZlcl9uYW1lICBsb2NhbGhvc3Q7CgogICAgbG9jYXRpb24gL2Rhc2hib2FyZCB7CiAgICAgICAgcmV3cml0ZSBeL2Rhc2hib2FyZCguKikkICQxIGJyZWFrOwoJCXByb3h5X3Bhc3MgaHR0cHM6Ly9rdWJlcm5ldGVzLWRhc2hib2FyZC5rdWJlcm5ldGVzLWRhc2hib2FyZC5zdmMuY2x1c3Rlci5sb2NhbDo0NDM7CiAgICB9CiAgICAKICAgIGxvY2F0aW9uIC8gewoJCXByb3h5X3Bhc3MgaHR0cHM6Ly9hcmdvY2Qtc2VydmVyLmFyZ29jZC5zdmMuY2x1c3Rlci5sb2NhbDo0NDM7CiAgICB9Cn0=
kind: Secret
metadata:
  managedFields:
    - apiVersion: v1
      operation: Update
  name: nginx-default-conf
  namespace: nginx-router
type: Opaque

---

# apiVersion: networking.k8s.io/v1beta1 # for k3s < v1.19
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: nginx-router
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80
